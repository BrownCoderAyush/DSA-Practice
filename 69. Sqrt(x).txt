main thing to focus on this solution is to mark mid as long long int type because when we multiply int values >= 2^31 - 1 then it may overflow and to avoid this we use long long int mid


class Solution {
public:
    int mySqrt(int x) {
        int i = 0;
        int result = x;
        int ans;
        while(i<=x){
        long long int mid = x + (i-x)/2;
            if(mid*mid==result){
                return mid;
            }else if(mid*mid>result){
                x = mid - 1;
            }else{
                ans = mid;
                i = mid+1;
                
            }
        }
        return ans;
    }
};